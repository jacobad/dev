<!------ controllers/meal/MealController.class.php --->

<?php

class MealController
{
    public function httpGetMethod(Http $http, array $queryFields)
    {
        // index.php/meal?id=3
      
        if(array_key_exists('id', $_GET) == true && ctype_digit($_GET['id']) == true)
        {
            $mealModel = new MealModel();
            $meal      = $mealModel->find($_GET['id']);
            
            $http->sendJsonResponse($meal);
        
        } else {
        
            $http->redirectTo('/');
        
        }
    }

    public function httpPostMethod(Http $http, array $formFields)
    {
    
    }
}


?>

<!------ model/MealModel.class.php --->

<?php

class MealModel {

    public function listAll() {
        $database = new Database();

        $sql = 'SELECT * FROM Meal';

        return $database->query($sql);
    }

    public function find($mealId)
    {
        $database = new Database();

        $sql = 'SELECT
                    *
                FROM Meal
                WHERE Id = ?';

        // Récupération du produit alimentaire spécifié.
        return $database->queryOne($sql, [ $mealId ]);
    }

}

?>


<!------ controllers/order/OrderController.class.php --->


<?php

class OrderController
{
    public function httpGetMethod(Http $http, array $queryFields)
    {
        if(array_key_exists('user', $_SESSION) == false) {

            $http->redirectTo('/user/login');
        }
        
        $mealModel = new MealModel();
        $meals     = $mealModel->listAll();
        
       return
        [
            'meals' => $meals
        ];
    }

    public function httpPostMethod(Http $http, array $formFields)
    {
    
    }
}

?>









<!--------- www/order/OrderView.phtml -------->



<h2><i class="fa fa-shopping-cart"></i> Passer une commande</h2>

<form data-order-step="run" id="order-form" class="generic-form">

    <!-- Champ caché stockant le prix de vente du produit alimentaire sélectionné -->
    <input type="hidden" name="salePrice">


    <fieldset>
        <legend>Ajouter un article</legend>
        <ul>
            <li>
                <label for="meal">Nom :</label>
                <select id="meal" name="meal">
                 <?php foreach($meals as $meal): ?>
                        <option value="<?= $meal['Id'] ?>"><?= $meal['Name'] ?></option>
                 <?php endforeach; ?>
                </select>
                <article id="meal-details" class="meal-details no-left-label">
                    <img src="" alt="Photo du produit">
                    <p ></p>
                    <span>Prix : <strong></strong> €</span>
                </article>
            </li>
            <li>
                <label for="quantity">Quantité :</label>
                <input id="quantity" class="quantity" type="text" maxlength="2" name="quantity" data-name="Quantité" data-type="positive-integer" data-required>
            </li>
            <li>
                <button class="button button-primary no-left-label" type="submit">Ajouter</button>
            </li>
        </ul>
    </fieldset>

    <fieldset>
        <legend>Récapitulatif de la commande</legend>
        <section id="order-summary"></section>
    </fieldset>
</form>

<ul class="link-list">
    <li>
        <a href="<?= $requestUrl ?>/order/validate"><button   class="button button-primary">Valider la commande</button></a>
        <a class="button button-cancel small" href="<?= $requestUrl ?>">Annuler</a>
    </li>
</ul>


<!-- Classes de gestion du formulaire de commande -->
<!-- Ce code JavaScript n'est chargé QUE depuis l'URL /order/payment/success -->
<script src="<?= $wwwUrl ?>/js/classes/BasketSession.class.js"></script>
<script src="<?= $wwwUrl ?>/js/classes/OrderForm.class.js"></script>






<!------ www/js/classes/OrderFprm.class.js --->
<script>
'use strict';


var OrderForm = function()
{
    this.basket = new BasketSession();
    this.onChangeMeal();
    $('#meal').on('change', this.onChangeMeal.bind(this));
    $('#order-form button').on('click', this.validateMeal.bind(this));
    $(document).on('click', '.trash', this.removeMeal.bind(this));
}

OrderForm.prototype.onChangeMeal = function(event)
{

    var mealId = $('#meal').val();
    console.log(getRequestUrl() + '/meal?id=' + mealId);
    
    $.getJSON( getRequestUrl() + '/meal?id=' + mealId, this.onAjaxChangeMeal);  
}

OrderForm.prototype.onAjaxChangeMeal = function(response)
{
    console.log(response);
    
    var imageUrl = getWwwUrl() + '/images/meals/' + response.Photo;

    $('#meal-details p').text(response.Description);
    $('#meal-details strong').text(parseFloat(response.SalePrice).toFixed(2));
    $('#meal-details img').attr('src', imageUrl);

}

OrderForm.prototype.validateMeal = function(event) {
    event.preventDefault();
    
    var mealId = $('#meal').val();
    var name = $('#meal').find('option:selected').text();
    var quantity = $('#quantity').val();
    var salePrice = $('#meal-details strong').text();
    var img = $('#meal-details img').attr('src');

    this.basket.add(mealId, name, quantity, salePrice, img);

}

OrderForm.prototype.removeMeal = function(event) {
    
    event.preventDefault();
    var index = event.currentTarget.dataset.id;
    this.basket.remove(index);

}


</script>


<!------ www/js/classes/BasketSession.class.js --->

<script>
'use strict';

var BasketSession = function()
{
    // Contenu du panier.
    this.items = [];
    
    this.load();


}

BasketSession.prototype.load = function()
{
    this.items = loadDataFromDomStorage('panier');
    if(this.items == null)
    {
        this.items = [];
    }
    this.build();

}


BasketSession.prototype.save = function()
{
    saveDataToDomStorage('panier', this.items);
};


BasketSession.prototype.add = function(mealId, name, quantity, salePrice, img)
{
    mealId    = parseInt(mealId);
    quantity  = parseInt(quantity);
    salePrice = parseFloat(salePrice);
    
    
    if(isNaN(quantity) == false) {
        $('#quantity').css('border', '1px solid grey');
       
       for(var index = 0; index < this.items.length; index++){

             if(this.items[index].mealId == mealId){
                this.items[index].quantity += quantity;
                this.save();
                this.build();
                return;

             }

        }

        this.items.push(
                {
                    mealId    : mealId,
                    name      : name,
                    quantity  : quantity,
                    salePrice : salePrice,
                    img       : img
                });

        this.save();
        this.build();
    } else {
    
        $('#quantity').css('border', '1px solid red');
        alert('merci d\'indiquer la quantité');
    }
}


BasketSession.prototype.build = function() {
    var table = $('<table class="generic-table">');

    table.append('<tr><td class="number"><strong>Quantité</strong></td><td><strong>Produit</strong></td><td class="number"><strong>Prix Unitaire</strong></td><td class="number"><strong>Prix Total</strong></td></tr>');

    for (var i =0; i < this.items.length; i++) {
        var tr = $('<tr>');
        tr.append('<td class="number">'+this.items[i].quantity+'</td><td ><strong>'+this.items[i].name+'</strong></td><td class="number">'+this.items[i].salePrice+'</td><td class="number">'+parseFloat(this.items[i].quantity)*parseFloat(this.items[i].salePrice)+' <button class="button trash button-cancel small" data-id="'+i+'"><i class="fa fa-trash"></i></button></td>');
        table.append(tr);
    }

    $('#order-summary').html(table);


}


BasketSession.prototype.remove = function(index) {
    this.items.splice(index, 1);
    this.save();
    this.build();
}


</script>

<!------ www/js/main.js --->


<script>

var order = new OrderForm();
console.log(order);
</script>